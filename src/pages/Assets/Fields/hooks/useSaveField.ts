// src/pages/Assets/Fields/hooks/useSaveField.ts

import { useState } from 'react';
import { FieldData } from './useFieldEdit';
import { UniversalSaveService } from '../../../../services/UniversalSaveService';
import {DEFAULT_API_BASE_URL} from '../../../../dataSync/index';

export interface UseSaveFieldReturn {
  isSaving: boolean;
  saveChanges: (field: FieldData) => Promise<boolean>;
}

export const useSaveField = (): UseSaveFieldReturn => {
  const [isSaving, setIsSaving] = useState(false);
  
  const saveService = new UniversalSaveService({
    apiBaseUrl: DEFAULT_API_BASE_URL,
    validateSchema: true,
    validateDependencies: true,
    stopOnError: true
  });

  const saveChanges = async (field: FieldData): Promise<boolean> => {
    setIsSaving(true);
    
    try {
      console.log('üíæ useSaveField: –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–µ...');
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –ø–æ–¥—Ö–æ–¥ —á—Ç–æ –∏ –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
      // saveEntityWithSteps –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      return await saveService.saveEntityWithSteps(
        field,
        [], // –ù–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π
        'assets_fields',
        '', // –ù–µ—Ç —Å–≤—è–∑–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
        [] // –ù–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      );
      
    } catch (error) {
      console.error('üí• –û—à–∏–±–∫–∞ –≤ useSaveField:', error);
      
      // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –≤—ã–∑—ã–≤–∞—é—â–µ–º –∫–æ–¥–µ
      throw error;
    } finally {
      setIsSaving(false);
    }
  };

  return {
    isSaving,
    saveChanges
  };
}; 
