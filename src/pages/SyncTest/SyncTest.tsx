import React, { useEffect, useState } from 'react';
// import { useSyncData } from '../../hooks/useSyncData';
import { useSyncData } from '../../dataSync';
import { SyncStatusPanel } from '../../components/Common/SyncStatusPanel';
import { EquipmentTable } from '../../components/Equipment/EquipmentTable';
import { 
  equipmentSyncConfig, 
  syncOptions, 
  statusPanelConfig,
  equipmentColumns,
  tableConfig
} from './config';

const SyncTest: React.FC = () => {
  const [equipmentData, setEquipmentData] = useState<any[]>([]);
  
  const {
    isInitialized,
    isLoading,
    syncStatuses,
    lastSyncResult,
    error,
    sync,
    resetDatabase,
    loadTableData,
    getSyncMetrics,
    clearError
  } = useSyncData(equipmentSyncConfig, syncOptions);
  
  console.log('üîç SyncTest Debug:', {
    isInitialized,
    isLoading,
    error,
    syncStatuses: syncStatuses.length,
    equipmentSyncConfig
  });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ —É—Å–ø–µ—à–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    if (isInitialized && lastSyncResult?.success) {
      loadEquipmentData();
    }
  }, [isInitialized, lastSyncResult]);

  const loadEquipmentData = async () => {
    try {
      const data = await loadTableData('assets_equipment');
      setEquipmentData(data);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫–∏:', err);
    }
  };

  const handleSync = async () => {
    try {
      clearError();
      const result = await sync();
      if (result?.success) {
        await loadEquipmentData();
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', err);
    }
  };

  const handleResetDatabase = async () => {
    if (!window.confirm('‚ö†Ô∏è –≠—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö IndexedDB. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
      return;
    }

    try {
      clearError();
      await resetDatabase();
      setEquipmentData([]);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err);
    }
  };

  const handleRowClick = (record: any) => {
    console.log('üìã –í—ã–±—Ä–∞–Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∞:', record);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  };

  const syncMetrics = getSyncMetrics();

  return (
    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>
      <h1 style={{ marginBottom: '20px', color: '#374151' }}>
        üîÑ –¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ - –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ç–µ—Ö–Ω–∏–∫–∏
      </h1>

      {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div style={{ 
        marginBottom: '20px', 
        display: 'flex', 
        gap: '12px', 
        flexWrap: 'wrap',
        alignItems: 'center'
      }}>
        <button
          onClick={handleSync}
          disabled={isLoading || !isInitialized}
          style={{
            padding: '10px 20px',
            backgroundColor: isLoading ? '#9ca3af' : '#3b82f6',
            color: 'white',
            border: 'none',
            borderRadius: '6px',
            cursor: isLoading ? 'not-allowed' : 'pointer',
            fontSize: '14px',
            fontWeight: 'bold',
            display: 'flex',
            alignItems: 'center',
            gap: '6px'
          }}
        >
          {isLoading ? '‚è≥ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...' : 'üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å'}
        </button>
        
        <button
          onClick={handleResetDatabase}
          disabled={isLoading}
          style={{
            padding: '10px 20px',
            backgroundColor: isLoading ? '#9ca3af' : '#ef4444',
            color: 'white',
            border: 'none',
            borderRadius: '6px',
            cursor: isLoading ? 'not-allowed' : 'pointer',
            fontSize: '14px',
            fontWeight: 'bold'
          }}
        >
          üí• –°–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        </button>

        <button
          onClick={loadEquipmentData}
          disabled={isLoading || !isInitialized}
          style={{
            padding: '10px 20px',
            backgroundColor: isLoading ? '#9ca3af' : '#10b981',
            color: 'white',
            border: 'none',
            borderRadius: '6px',
            cursor: isLoading ? 'not-allowed' : 'pointer',
            fontSize: '14px',
            fontWeight: 'bold'
          }}
        >
          üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
        </button>

        {equipmentData.length > 0 && (
          <div style={{
            padding: '8px 12px',
            backgroundColor: '#f3f4f6',
            borderRadius: '4px',
            fontSize: '13px',
            color: '#6b7280'
          }}>
            üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {equipmentData.length} –µ–¥–∏–Ω–∏—Ü —Ç–µ—Ö–Ω–∏–∫–∏
          </div>
        )}
      </div>

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ */}
      {error && (
        <div style={{
          marginBottom: '20px',
          padding: '12px',
          backgroundColor: '#fef2f2',
          borderRadius: '6px',
          border: '1px solid #fecaca',
          color: '#dc2626'
        }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
            <span>‚ùå</span>
            <span style={{ fontWeight: 'bold' }}>–û—à–∏–±–∫–∞:</span>
          </div>
          <div style={{ marginTop: '4px', fontSize: '14px' }}>{error}</div>
          <button
            onClick={clearError}
            style={{
              marginTop: '8px',
              padding: '4px 8px',
              backgroundColor: 'transparent',
              border: '1px solid #dc2626',
              borderRadius: '4px',
              color: '#dc2626',
              cursor: 'pointer',
              fontSize: '12px'
            }}
          >
            –ó–∞–∫—Ä—ã—Ç—å
          </button>
        </div>
      )}

      {/* –°—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ */}
      {!isInitialized && !isLoading && (
        <div style={{
          marginBottom: '20px',
          padding: '16px',
          backgroundColor: '#fef3c7',
          borderRadius: '6px',
          border: '1px solid #f59e0b',
          color: '#92400e'
        }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
            <span>‚ö†Ô∏è</span>
            <span style={{ fontWeight: 'bold' }}>–°–∏—Å—Ç–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞</span>
          </div>
          <div style={{ marginTop: '4px', fontSize: '14px' }}>
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </div>
        </div>
      )}

      {/* –ü–∞–Ω–µ–ª—å —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ */}
      <SyncStatusPanel
        statuses={syncStatuses}
        lastResult={lastSyncResult}
        metrics={syncMetrics}
        isLoading={isLoading}
        {...statusPanelConfig}
      />

      {/* –¢–∞–±–ª–∏—Ü–∞ —Ç–µ—Ö–Ω–∏–∫–∏ */}
      <div style={{ marginTop: '30px' }}>
        <h2 style={{ marginBottom: '16px', color: '#374151' }}>
          üöú –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ç–µ—Ö–Ω–∏–∫–∏
        </h2>
        
        <EquipmentTable
          data={equipmentData}
          columns={equipmentColumns}
          isLoading={isLoading && equipmentData.length === 0}
          onRowClick={handleRowClick}
          {...tableConfig}
        />
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
      <div style={{ 
        marginTop: '30px', 
        padding: '15px', 
        backgroundColor: '#f3f4f6', 
        borderRadius: '6px' 
      }}>
        <h3 style={{ margin: '0 0 12px 0', color: '#374151' }}>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h3>
        <ul style={{ margin: '0', paddingLeft: '20px', fontSize: '14px', color: '#6b7280' }}>
          <li>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Ä—Å–∏–∏ —Ç–∞–±–ª–∏—Ü –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ</li>
          <li>–ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ</li>
          <li>–ï—Å–ª–∏ –≤–µ—Ä—Å–∏–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç - –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è</li>
          <li>–ö–Ω–æ–ø–∫–∞ "–°–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö" –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</li>
          <li>–ö–ª–∏–∫ –ø–æ —Å—Ç—Ä–æ–∫–µ –≤ —Ç–∞–±–ª–∏—Ü–µ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å</li>
        </ul>
        
        {isInitialized && (
          <div style={{ marginTop: '12px', fontSize: '13px', color: '#9ca3af' }}>
            <strong>–¢–∞–±–ª–∏—Ü—ã –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:</strong> {equipmentSyncConfig.tables.join(', ')}
          </div>
        )}
      </div>
    </div>
  );
};

export default SyncTest;